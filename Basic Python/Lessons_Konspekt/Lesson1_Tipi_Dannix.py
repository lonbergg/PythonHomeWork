x = 5
y = 10
sum = x + y
text = "Привет,"
name = "Олександр"
greeting = text + name

p = 5
n = 2

addition = p + n  # 7
subtraction = p - n # 3
multiplication = p * n # 10
division = p / n # 2.5
power = p // n # 25
integer_division = p // n # 2
remainder = p % n # 1

b = 17
j = 5
integer_div = b // j
rema = b % j

print(f"Целая часть: {integer_div}, остаток: {rema}" )

z = 5
d = 2

equal = z == d        # False
not_equal = z != d    # True
greater_than = z > d  # True
less_than = z < d     # False
greater_or_equal = z >= d # True
less_or_equal = z <= d    # False


m = 5.6
l = int(m)
p = str(m)
c = bool(m)


complex_number = 5 + 3j # Комплексное число с действительной частью 5 и мнимой частью 3



binary_number = 0b1011      # Бинарное число, эквивалентное десятичному числу 11
octal_number = 0o123        # Восьмеричное число, эквивалентное десятичному числу 83
hexadecimal_number = 0x1A2F # Шестнадцатеричное число, эквивалентное десятичному числу 6703

str1 = "Привет, "
str2 = "мир!"
concatenated_str = str1 + str2  # Объединение строк: "Привет, мир!"
first_char = str1[0]            # Получение первого символа строки: "П"


# Оператор присваивания +=
x = 5
x += 3  # То же самое, что x = x + 3; x = 8

# Оператор присваивания -=
y = 10
y -= 4  # То же самое, что y = y - 4; y = 6

# Оператор присваивания *=
z = 3
z *= 2  # То же самое, что z = z * 2; z = 6

# Оператор присваивания /=
a = 9
a /= 3  # То же самое, что a = a / 3; a = 3.0

# Оператор присваивания //=
b = 8
b //= 3  # То же самое, что b = b // 3; b = 2

# Оператор присваивания %=
c = 13
c %= 5   # То же самое, что c = c % 5; c = 3

# Оператор присваивания **=
d = 4
d **= 3  # То же самое, что d = d ** 3; d = 64

# Оператор присваивания &= (битовое И)
e = 12
e &= 7   # То же самое, что e = e & 7; e = 4

# Оператор присваивания |= (битовое ИЛИ)
f = 5
f |= 3   # То же самое, что f = f | 3; f = 7

# Оператор присваивания ^= (битовое исключающее ИЛИ)
g = 10
g ^= 6   # То же самое, что g = g ^ 6; g = 12

# Оператор присваивания <<= (битовый сдвиг влево)
h = 3
h <<= 2  # То же самое, что h = h << 2; h = 12

# Оператор присваивания >>= (битовый сдвиг вправо)
i = 11
i >>= 1  # То же самое, что i = i >> 1; i = 5


